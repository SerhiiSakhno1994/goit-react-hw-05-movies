{"version":3,"file":"static/js/Homepage.7041b660.chunk.js","mappings":"kLACA,EAAmC,4CAAnC,EAAuG,iDAAvG,EAA+J,gCAA/J,EAA2M,qCAA3M,EAAuP,gC,kBCKxO,SAASA,EAAT,GAAsC,IAATC,EAAQ,EAARA,KAC1C,OACE,eAAkBC,UAAWC,EAA7B,UACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMH,UAAWC,EAA3C,UACGF,EAAKK,aACJ,gBACEJ,UAAWC,EACXI,IAAG,yCAAoCN,EAAKK,aAC5CE,IAAKP,EAAKQ,kBAGZ,gBACEP,UAAWC,EACXI,IAAKG,EACLF,IAAKP,EAAKQ,kBAId,gBAAKP,UAAWC,EAAhB,SACGF,EAAKU,OACJ,+BACE,eAAIT,UAAWC,EAAf,SAA6BF,EAAKU,WAGpC,eAAIT,UAAWC,EAAf,SAA6BF,EAAKW,sBAtBjCX,EAAKI,ICPlB,MAA8B,mCCIf,SAASQ,EAAT,GAAkC,IAATC,EAAQ,EAARA,KACtC,OACE,eAAIZ,UAAWC,EAAf,SACGW,EAAKC,KAAI,SAAAd,GAAI,OACZ,SAACD,EAAD,CAAiCC,KAAMA,GAAfA,EAAKI,W,qFCkBrC,UArBiB,WACf,OAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAY,GAEZE,EAAAA,GAAAA,mBAA4BC,MAAK,SAAAR,GAC/BG,EAAQH,EAAKS,SACbJ,GAAY,QAEb,KAGD,gCACGD,IAAU,SAAC,IAAD,IACVJ,EAAKU,OAAS,IAAK,SAAC,IAAD,CAAeV,KAAMA,S,oICtBzCW,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAIC,EAA7D,+BAAmE,GAAnE,SACyBC,MAAMH,EAAKC,EAAQC,GAD5C,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAYO,SAASC,EAAoBC,GAClC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCa,EADzC,gCASxB,SAASC,EAAmBC,GACjC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,oBAIxB,SAASgB,EAAoBD,GAClC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,2BAK/B,IAAML,EAAW,CACfsB,iBA3BK,WACL,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,qCACaC,KA0B1CY,oBAAAA,EACAM,kBAnBK,SAA2BH,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACaf,EADb,qBAmB7Bc,mBAAAA,EACAE,oBAAAA,GAGF,Q","sources":["webpack://react-homework-template/./src/components/TrendsGallery/TrendsGalleryItem/TrendsGalleryItem.module.css?69b1","components/TrendsGallery/TrendsGalleryItem/TrendsGalleryItem.jsx","webpack://react-homework-template/./src/components/TrendsGallery/TrendsGallery.module.css?6648","components/TrendsGallery/TrendsGallery.jsx","components/pages/HomePage/HomePage.jsx","services/movieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ImageGalleryItem\":\"TrendsGalleryItem_ImageGalleryItem__+xnMl\",\"ImageGalleryItemImage\":\"TrendsGalleryItem_ImageGalleryItemImage__gu3Ux\",\"text\":\"TrendsGalleryItem_text__TBy4z\",\"textTitle\":\"TrendsGalleryItem_textTitle__HTV99\",\"link\":\"TrendsGalleryItem_link__ao1Q-\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport s from './TrendsGalleryItem.module.css';\nimport NoFoto from './no_mage.jpg';\n\nexport default function TrendsGalleryItem({ item }) {\n  return (\n    <li key={item.id} className={s.ImageGalleryItem}>\n      <Link to={`/movies/${item.id}`} className={s.link}>\n        {item.poster_path ? (\n          <img\n            className={s.ImageGalleryItemImage}\n            src={`https://themoviedb.org/t/p/w342${item.poster_path}`}\n            alt={item.original_title}\n          />\n        ) : (\n          <img\n            className={s.ImageGalleryItemImage}\n            src={NoFoto}\n            alt={item.original_title}\n          />\n        )}\n\n        <div className={s.text}>\n          {item.title ? (\n            <>\n              <h3 className={s.textTitle}>{item.title}</h3>\n            </>\n          ) : (\n            <h3 className={s.textTitle}>{item.original_name}</h3>\n          )}\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nTrendsGalleryItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"CardGallery\":\"TrendsGallery_CardGallery__oSnfU\"};","import PropTypes from 'prop-types';\n\nimport TrendsGalleryItem from './TrendsGalleryItem/TrendsGalleryItem';\nimport s from './TrendsGallery.module.css';\n\nexport default function TrendsGallery({ data }) {\n  return (\n    <ul className={s.CardGallery}>\n      {data.map(item => (\n        <TrendsGalleryItem key={item.id} item={item} />\n      ))}\n    </ul>\n  );\n}\n\nTrendsGallery.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport movieApp from 'services/movieApi';\nimport TrendsGallery from 'components/TrendsGallery/TrendsGallery';\nimport Loader from 'components/Loader/Loader';\nconst Homepage = () => {\n  const [data, setData] = useState([]);\n  const [loader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n\n    movieApp.fetchMovieTrends().then(data => {\n      setData(data.results);\n      setIsLoader(false);\n    });\n  }, []);\n\n  return (\n    <>\n      {loader && <Loader />}\n      {data.length > 0 && <TrendsGallery data={data} />}\n    </>\n  );\n};\n\nexport default Homepage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '59364287eb9441f4377a756545696a86';\n\nasync function fetchWithErrorHandling(url = '', config = {}, key = '') {\n  const response = await fetch(url, config, key);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchMovieTrends() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n}\nexport function fetchMovieWithQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\nexport function fetchActorsDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\nexport function fetchReviewsDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nconst movieApp = {\n  fetchMovieTrends,\n  fetchMovieWithQuery,\n  fetchMovieDetails,\n  fetchActorsDetails,\n  fetchReviewsDetails,\n};\n\nexport default movieApp;\n"],"names":["TrendsGalleryItem","item","className","s","to","id","poster_path","src","alt","original_title","NoFoto","title","original_name","TrendsGallery","data","map","useState","setData","loader","setIsLoader","useEffect","movieApp","then","results","length","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","key","fetch","response","ok","json","Promise","reject","Error","fetchMovieWithQuery","query","fetchActorsDetails","movieId","fetchReviewsDetails","fetchMovieTrends","fetchMovieDetails"],"sourceRoot":""}